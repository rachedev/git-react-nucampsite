[{"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"18","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"20","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":695,"mtime":1612409108675,"results":"26","hashOfConfig":"27"},{"size":620,"mtime":1613103573189,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611640072139,"results":"29","hashOfConfig":"27"},{"size":2047,"mtime":1613768800382,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612496491219,"results":"31","hashOfConfig":"27"},{"size":6346,"mtime":1613777748711,"results":"32","hashOfConfig":"27"},{"size":3813,"mtime":1613775221439,"results":"33","hashOfConfig":"27"},{"size":5129,"mtime":1613019307911,"results":"34","hashOfConfig":"27"},{"size":1916,"mtime":1612415320126,"results":"35","hashOfConfig":"27"},{"size":1756,"mtime":1613777198056,"results":"36","hashOfConfig":"27"},{"size":11025,"mtime":1613712871194,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1612496848297,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612496860290,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612496868556,"results":"40","hashOfConfig":"27"},{"size":4080,"mtime":1612641992964,"results":"41","hashOfConfig":"27"},{"size":790,"mtime":1613713295964,"results":"42","hashOfConfig":"27"},{"size":570,"mtime":1613772173228,"results":"43","hashOfConfig":"27"},{"size":696,"mtime":1613767002662,"results":"44","hashOfConfig":"27"},{"size":182,"mtime":1613622622788,"results":"45","hashOfConfig":"27"},{"size":621,"mtime":1613709108038,"results":"46","hashOfConfig":"27"},{"size":4447,"mtime":1613771740622,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1613765856901,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1613709215466,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1613711581685,"results":"50","hashOfConfig":"27"},{"size":49,"mtime":1613765788857,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"m6dhss",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["108","109"],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["110","111"],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["112","113","114"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n  );\n}\n\nfunction RenderComments({comments, postComment, campsiteId}) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n        <CommentForm campsiteId={campsiteId} postComment={postComment} />\n      </div>\n    );\n  }\n  return <div />;\n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    minLength: \"Must be at least 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\">Comment</Label>\n                <Control.textarea\n                  model=\".text\"\n                  id=\"text\"\n                  name=\"text\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                />\n              </div>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction CampsiteInfo(props) {\n  if (props.isLoading) {\n      return (\n          <div className=\"container\">\n              <div className=\"row\">\n                  <Loading />\n              </div>\n          </div>\n      );\n  }\n  if (props.errMess) {\n      return (\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col\">\n                      <h4>{props.errMess}</h4>\n                  </div>\n              </div>\n          </div>\n      );\n  }  \n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments\n              comments={props.comments}\n              postComment={props.postComment}\n              campsiteId={props.campsite.id}\n          />\n        </div>\n      </div>\n    );\n  }\n  return <div />;\n}\n\nexport default CampsiteInfo;\n","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["115","116","117","118","119","120","121","122"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>                    \n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                       <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>       \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["123","124"],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],["125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":104,"column":17,"nodeType":"135","endLine":109,"endColumn":18},{"ruleId":"133","severity":1,"message":"136","line":119,"column":17,"nodeType":"135","endLine":129,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":143,"column":17,"nodeType":"135","endLine":149,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":5,"column":33,"nodeType":"140","messageId":"141","endLine":5,"endColumn":40},{"ruleId":"133","severity":1,"message":"136","line":82,"column":33,"nodeType":"135","endLine":90,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":107,"column":37,"nodeType":"135","endLine":115,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":132,"column":37,"nodeType":"135","endLine":141,"endColumn":39},{"ruleId":"133","severity":1,"message":"136","line":159,"column":37,"nodeType":"135","endLine":166,"endColumn":39},{"ruleId":"133","severity":1,"message":"142","line":183,"column":45,"nodeType":"135","endLine":187,"endColumn":47},{"ruleId":"133","severity":1,"message":"134","line":193,"column":37,"nodeType":"135","endLine":194,"endColumn":66},{"ruleId":"133","severity":1,"message":"137","line":203,"column":37,"nodeType":"135","endLine":206,"endColumn":39},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],["147"],["148"],"no-global-assign","no-unsafe-negation"]