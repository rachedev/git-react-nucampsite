[{"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"18","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"20"},{"size":695,"mtime":1612409108675,"results":"21","hashOfConfig":"22"},{"size":620,"mtime":1613103573189,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611640072139,"results":"24","hashOfConfig":"22"},{"size":1394,"mtime":1612558929391,"results":"25","hashOfConfig":"22"},{"size":1242,"mtime":1612496491219,"results":"26","hashOfConfig":"22"},{"size":4882,"mtime":1613361585253,"results":"27","hashOfConfig":"22"},{"size":2169,"mtime":1613104258377,"results":"28","hashOfConfig":"22"},{"size":5129,"mtime":1613019307911,"results":"29","hashOfConfig":"22"},{"size":1916,"mtime":1612415320126,"results":"30","hashOfConfig":"22"},{"size":944,"mtime":1612498726050,"results":"31","hashOfConfig":"22"},{"size":10960,"mtime":1613165997988,"results":"32","hashOfConfig":"22"},{"size":4243,"mtime":1612496848297,"results":"33","hashOfConfig":"22"},{"size":1054,"mtime":1612496860290,"results":"34","hashOfConfig":"22"},{"size":303,"mtime":1612496868556,"results":"35","hashOfConfig":"22"},{"size":4080,"mtime":1612641992964,"results":"36","hashOfConfig":"22"},{"size":482,"mtime":1613622759664,"results":"37","hashOfConfig":"22"},{"size":182,"mtime":1613622605152,"results":"38","hashOfConfig":"22"},{"size":190,"mtime":1613623084750,"results":"39","hashOfConfig":"22"},{"size":182,"mtime":1613622622788,"results":"40","hashOfConfig":"22"},{"size":186,"mtime":1613622585860,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"m6dhss",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["86","87"],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["88","89","90"],"import React, { Component } from \"react\";\nimport {\n  Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\n  Button, Modal, ModalHeader, ModalBody, Label\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <Card>\n        <CardImg top src={campsite.image} alt={campsite.name} />\n        <CardBody>\n          <CardText>{campsite.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nfunction RenderComments({ comments }) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        {comments.map((comment) => {\n          return (\n            <div key={comment.id}>\n              <p>{comment.text}<br />\n                    -- {comment.author},{\" \"}, {new Intl.DateTimeFormat(\"en-US\", {\n                year: \"numeric\",\n                month: \"short\",\n                day: \"2-digit\",\n              }).format(new Date(Date.parse(comment.date)))}\n              </p>\n            </div>\n          );\n        })}\n        <CommentForm />\n      </div>\n    );\n  }\n  return <div />;\n}\n\nclass CommentForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    console.log('Current state is: ' + JSON.stringify(values));\n    alert('Current state is: ' + JSON.stringify(values));\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    minLength: \"Must be at least 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\">Comment</Label>\n                <Control.textarea\n                  model=\".text\"\n                  id=\"text\"\n                  name=\"text\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                />\n              </div>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction CampsiteInfo(props) {\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments comments={props.comments} />\n        </div>\n      </div>\n    );\n  }\n  return <div />;\n}\n\nexport default CampsiteInfo;","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["91","92","93","94","95","96","97"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>                    \n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["98","99"],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/RachelleLee/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":85,"column":17,"nodeType":"106","endLine":90,"endColumn":18},{"ruleId":"104","severity":1,"message":"107","line":100,"column":17,"nodeType":"106","endLine":110,"endColumn":19},{"ruleId":"104","severity":1,"message":"108","line":124,"column":17,"nodeType":"106","endLine":130,"endColumn":19},{"ruleId":"104","severity":1,"message":"107","line":81,"column":33,"nodeType":"106","endLine":89,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":106,"column":37,"nodeType":"106","endLine":114,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":131,"column":37,"nodeType":"106","endLine":140,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":158,"column":37,"nodeType":"106","endLine":165,"endColumn":39},{"ruleId":"104","severity":1,"message":"109","line":182,"column":45,"nodeType":"106","endLine":186,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":192,"column":37,"nodeType":"106","endLine":193,"endColumn":66},{"ruleId":"104","severity":1,"message":"108","line":202,"column":37,"nodeType":"106","endLine":205,"endColumn":39},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["112"],["113"],"no-global-assign","no-unsafe-negation"]